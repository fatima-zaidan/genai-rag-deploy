name: CI/CD to EC2 - Genii Assistant

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/genai-assistant:latest
      NAME: genii-assistant
      HOST_PORT: 80      # EC2 host port
      CONTAINER_PORT: 7860 # Gradio container port

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            IMAGE="${{ env.IMAGE }}"
            NAME="${{ env.NAME }}"
            HOST_PORT="${{ env.HOST_PORT }}"
            CONTAINER_PORT="${{ env.CONTAINER_PORT }}"

            echo "Logging in to Docker Hub on EC2..."
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

            echo "Pulling latest image..."
            docker pull "$IMAGE"

            if [ "$(docker ps -aq -f name=^/${NAME}$)" ]; then
              echo "Stopping and removing existing container..."
              docker stop "$NAME" || true
              docker rm "$NAME" || true
            fi

            echo "Running new container..."
            docker run -d \
              --name "$NAME" \
              --restart unless-stopped \
              -p ${HOST_PORT}:${CONTAINER_PORT} \
              "$IMAGE"

            echo "Deployment completed successfully."
